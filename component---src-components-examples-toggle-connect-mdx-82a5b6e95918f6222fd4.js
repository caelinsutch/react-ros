(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{Qpqu:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return g}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var o=n("/FXl"),r=n("TjRS"),a=n("ZFoC"),c=n("MYfA"),i=n("zydn");n("aD51");function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/examples/ToggleConnect.mdx"}});var p={_frontmatter:l},u=r.a;function g(e){var t,n=e.components,g=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(o.b)(u,s({},p,g,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"toggleconnect"},"ToggleConnect"),Object(o.b)("p",null,"If you have ROS installed, go ahead and try out the demo below. Just start up a ",Object(o.b)("a",s({parentName:"p"},{href:"https://github.com/RobotWebTools/rosbridge_suite"}),"rosbridge server")," using the default parameters and hit the button - you should see your topics listed along with the status of the connection changing too."),Object(o.b)(a.c,{__position:0,__code:"<ROS>\n  <ToggleConnect />\n</ROS>",__scope:(t={props:g,DefaultLayout:r.a,Playground:a.c,ROS:c.a,ToggleConnect:i.a},t.DefaultLayout=r.a,t._frontmatter=l,t),mdxType:"Playground"},Object(o.b)(c.a,{mdxType:"ROS"},Object(o.b)(i.a,{mdxType:"ToggleConnect"}))),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{className:"language-javascript"}),"import React from 'react'\nimport { useROS } from '../ROS'\n\nfunction ToggleConnect() {\n  const { isConnected, topics, url, toggleConnection } = useROS();\n\n  return (\n    <div>\n      <p><strong>ROS url:</strong> {url}</p>\n      <button onClick={ toggleConnection }>Toggle Connect</button>\n      <p><strong>Status of ROS:</strong> { isConnected ? \"connected\" : \"not connected\" }</p>\n      <p><strong>Topics detected:</strong></p>\n      { topics.map((topic, i) => <li key={i}>    {topic.path}</li> )}\n    </div>\n  );\n}\n\nexport default ToggleConnect;\n")))}void 0!==g&&g&&g===Object(g)&&Object.isExtensible(g)&&!g.hasOwnProperty("__filemeta")&&Object.defineProperty(g,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/examples/ToggleConnect.mdx"}}),g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-examples-toggle-connect-mdx-82a5b6e95918f6222fd4.js.map